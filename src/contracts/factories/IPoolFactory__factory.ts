/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { IPoolFactory, IPoolFactoryInterface } from '../IPoolFactory';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'base',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fyToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
    ],
    name: 'PoolCreated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'POOL_BYTECODE_HASH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'base',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'fyToken',
        type: 'address',
      },
    ],
    name: 'calculatePoolAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'base',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'fyToken',
        type: 'address',
      },
    ],
    name: 'createPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'base',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'fyToken',
        type: 'address',
      },
    ],
    name: 'getPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextBase',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextFYToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class IPoolFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolFactoryInterface {
    return new utils.Interface(_abi) as IPoolFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IPoolFactory {
    return new Contract(address, _abi, signerOrProvider) as IPoolFactory;
  }
}
