/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { Wand, WandInterface } from '../Wand';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract ICauldronGov',
        name: 'cauldron_',
        type: 'address',
      },
      {
        internalType: 'contract ILadleGov',
        name: 'ladle_',
        type: 'address',
      },
      {
        internalType: 'contract IPoolFactory',
        name: 'poolFactory_',
        type: 'address',
      },
      {
        internalType: 'contract IJoinFactory',
        name: 'joinFactory_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        indexed: true,
        internalType: 'bytes4',
        name: 'newAdminRole',
        type: 'bytes4',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BURN',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CHI',
    outputs: [
      {
        internalType: 'bytes6',
        name: '',
        type: 'bytes6',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EXIT',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'JOIN',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOCK',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MINT',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'RATE',
    outputs: [
      {
        internalType: 'bytes6',
        name: '',
        type: 'bytes6',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROOT',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes6',
        name: 'assetId',
        type: 'bytes6',
      },
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'addAsset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes6',
        name: 'seriesId',
        type: 'bytes6',
      },
      {
        internalType: 'bytes6',
        name: 'baseId',
        type: 'bytes6',
      },
      {
        internalType: 'uint32',
        name: 'maturity',
        type: 'uint32',
      },
      {
        internalType: 'bytes6[]',
        name: 'ilkIds',
        type: 'bytes6[]',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'addSeries',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cauldron',
    outputs: [
      {
        internalType: 'contract ICauldronGov',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4[]',
        name: 'roles',
        type: 'bytes4[]',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRoles',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'joinFactory',
    outputs: [
      {
        internalType: 'contract IJoinFactory',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ladle',
    outputs: [
      {
        internalType: 'contract ILadleGov',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
    ],
    name: 'lockRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes6',
        name: 'assetId',
        type: 'bytes6',
      },
      {
        internalType: 'contract IMultiOracleGov',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'rateSource',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'chiSource',
        type: 'address',
      },
    ],
    name: 'makeBase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes6',
        name: 'baseId',
        type: 'bytes6',
      },
      {
        internalType: 'bytes6',
        name: 'ilkId',
        type: 'bytes6',
      },
      {
        internalType: 'contract IMultiOracleGov',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spotSource',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'ratio',
        type: 'uint32',
      },
      {
        internalType: 'uint96',
        name: 'max',
        type: 'uint96',
      },
      {
        internalType: 'uint24',
        name: 'min',
        type: 'uint24',
      },
      {
        internalType: 'uint8',
        name: 'dec',
        type: 'uint8',
      },
    ],
    name: 'makeIlk',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolFactory',
    outputs: [
      {
        internalType: 'contract IPoolFactory',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4[]',
        name: 'roles',
        type: 'bytes4[]',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRoles',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'role',
        type: 'bytes4',
      },
      {
        internalType: 'bytes4',
        name: 'adminRole',
        type: 'bytes4',
      },
    ],
    name: 'setRoleAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class Wand__factory {
  static readonly abi = _abi;
  static createInterface(): WandInterface {
    return new utils.Interface(_abi) as WandInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wand {
    return new Contract(address, _abi, signerOrProvider) as Wand;
  }
}
